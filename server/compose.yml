version: '3'

services:
  setup:
    container_name: setup
    image: elasticsearch:${STACK_VERSION}
    command: /tmp/setup.sh
    user: '0'
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./setup.sh:/tmp/setup.sh
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', '[ -f config/certs/es/es.crt ]']
      interval: 1s
      timeout: 5s
      retries: 120

  es:
    container_name: es
    image: elasticsearch:${STACK_VERSION}
    depends_on:
      setup:
        condition: service_healthy
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata01:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
    ports:
      - ${ES_PORT}:9200
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    # NOTE: mem_limit should be 4GB at least.
    # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_install_docker_desktop_or_docker_engine
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: kibana
    image: kibana:${STACK_VERSION}
    depends_on:
      es:
        condition: service_healthy
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - KIBANA_ENCRYPTION_KEY=${KIBANA_ENCRYPTION_KEY}
    mem_limit: 2g
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  fluent-bit:
    container_name: fluent-bit
    image: fluent/fluent-bit:1.9
    depends_on:
      es:
        condition: service_healthy
    volumes:
      - certs:/fluent-bit/certs
      - ./fluent-bit:/fluent-bit/etc
      - ./log/fluent-bit:/fluent-bit/log
    ports:
      - '24224:24224'
      - '24225:24225'
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - SSL_CERT_FILE=/fluent-bit/certs/ca/ca.crt
    mem_limit: 1g

volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local
